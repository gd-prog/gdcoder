/* Java program ... Given a linked list A, remove the B-th node from the end of the list and return its head.
For example, given linked list: 1->2->3->4->5, and B = 2.
After removing the second node from the end, the linked list becomes 1->2->3->5.

NOTE: If B is greater than the size of the list, remove the first node of the list.

Try doing it using constant additional space.*/

/**
 * Definition for singly-linked list.
 * class ListNode {
 *     public int val;
 *     public ListNode next;
 *     ListNode(int x) { val = x; next = null; }
 * }
 */
public class Solution {
    public ListNode removeNthFromEnd(ListNode A, int B) {
        ListNode a1=A,a2=A;
        int size=0;
        while(a1!=null){
            a1=a1.next;
            size++;
        }
        if(B>=size){
            A=A.next;
        }
        else{
            for(int i=0;i<size-B-1;i++){
                a2=a2.next;
            }
            a2.next=a2.next.next;
            }            
        return A;
    }
}
